// CODE GENERATED BY pkg/config/types/gen_paths DO NOT EDIT

package types

const ID = "ID"
const Node = "Node"
const NodeName = "Node.Name"
const NodeNameProvider = "Node.NameProvider"
const NodeClientAPI = "Node.ClientAPI"
const NodeClientAPIHost = "Node.ClientAPI.Host"
const NodeClientAPIPort = "Node.ClientAPI.Port"
const NodeClientAPIClientTLS = "Node.ClientAPI.ClientTLS"
const NodeClientAPIClientTLSUseTLS = "Node.ClientAPI.ClientTLS.UseTLS"
const NodeClientAPIClientTLSCACert = "Node.ClientAPI.ClientTLS.CACert"
const NodeClientAPIClientTLSInsecure = "Node.ClientAPI.ClientTLS.Insecure"
const NodeClientAPITLS = "Node.ClientAPI.TLS"
const NodeClientAPITLSAutoCert = "Node.ClientAPI.TLS.AutoCert"
const NodeClientAPITLSAutoCertCachePath = "Node.ClientAPI.TLS.AutoCertCachePath"
const NodeClientAPITLSServerCertificate = "Node.ClientAPI.TLS.ServerCertificate"
const NodeClientAPITLSServerKey = "Node.ClientAPI.TLS.ServerKey"
const NodeClientAPITLSSelfSigned = "Node.ClientAPI.TLS.SelfSigned"
const NodeServerAPI = "Node.ServerAPI"
const NodeServerAPIHost = "Node.ServerAPI.Host"
const NodeServerAPIPort = "Node.ServerAPI.Port"
const NodeServerAPIClientTLS = "Node.ServerAPI.ClientTLS"
const NodeServerAPIClientTLSUseTLS = "Node.ServerAPI.ClientTLS.UseTLS"
const NodeServerAPIClientTLSCACert = "Node.ServerAPI.ClientTLS.CACert"
const NodeServerAPIClientTLSInsecure = "Node.ServerAPI.ClientTLS.Insecure"
const NodeServerAPITLS = "Node.ServerAPI.TLS"
const NodeServerAPITLSAutoCert = "Node.ServerAPI.TLS.AutoCert"
const NodeServerAPITLSAutoCertCachePath = "Node.ServerAPI.TLS.AutoCertCachePath"
const NodeServerAPITLSServerCertificate = "Node.ServerAPI.TLS.ServerCertificate"
const NodeServerAPITLSServerKey = "Node.ServerAPI.TLS.ServerKey"
const NodeServerAPITLSSelfSigned = "Node.ServerAPI.TLS.SelfSigned"
const NodeServerMiddlewareConfig = "Node.ServerMiddlewareConfig"
const NodeServerMiddlewareConfigHeaders = "Node.ServerMiddlewareConfig.Headers"
const NodeServerMiddlewareConfigReadTimeout = "Node.ServerMiddlewareConfig.ReadTimeout"
const NodeServerMiddlewareConfigRequestHandlerTimeout = "Node.ServerMiddlewareConfig.RequestHandlerTimeout"
const NodeServerMiddlewareConfigMaxBytesToReadInBody = "Node.ServerMiddlewareConfig.MaxBytesToReadInBody"
const NodeServerMiddlewareConfigThrottleLimit = "Node.ServerMiddlewareConfig.ThrottleLimit"
const NodeServerMiddlewareConfigLogLevel = "Node.ServerMiddlewareConfig.LogLevel"
const NodeServerMiddlewareConfigMigrations = "Node.ServerMiddlewareConfig.Migrations"
const NodeServerMiddlewareConfigDebug = "Node.ServerMiddlewareConfig.Debug"
const NodeServer = "Node.Server"
const NodeServerAddress = "Node.Server.Address"
const NodeServerPort = "Node.Server.Port"
const NodeServerAutoCertDomain = "Node.Server.AutoCertDomain"
const NodeServerAutoCertCache = "Node.Server.AutoCertCache"
const NodeServerTLSCertificateFile = "Node.Server.TLSCertificateFile"
const NodeServerTLSKeyFile = "Node.Server.TLSKeyFile"
const NodeServerReadHeaderTimeout = "Node.Server.ReadHeaderTimeout"
const NodeServerWriteTimeout = "Node.Server.WriteTimeout"
const NodeLibp2p = "Node.Libp2p"
const NodeLibp2pSwarmPort = "Node.Libp2p.SwarmPort"
const NodeLibp2pPeerConnect = "Node.Libp2p.PeerConnect"
const NodeIPFS = "Node.IPFS"
const NodeIPFSConnect = "Node.IPFS.Connect"
const NodeIPFSPrivateInternal = "Node.IPFS.PrivateInternal"
const NodeIPFSSwarmAddresses = "Node.IPFS.SwarmAddresses"
const NodeIPFSSwarmKeyPath = "Node.IPFS.SwarmKeyPath"
const NodeIPFSServePath = "Node.IPFS.ServePath"
const NodeIPFSProfile = "Node.IPFS.Profile"
const NodeIPFSSwarmListenAddresses = "Node.IPFS.SwarmListenAddresses"
const NodeIPFSGatewayListenAddresses = "Node.IPFS.GatewayListenAddresses"
const NodeIPFSAPIListenAddresses = "Node.IPFS.APIListenAddresses"
const NodeCompute = "Node.Compute"
const NodeComputeCapacity = "Node.Compute.Capacity"
const NodeComputeCapacityIgnorePhysicalResourceLimits = "Node.Compute.Capacity.IgnorePhysicalResourceLimits"
const NodeComputeCapacityTotalResourceLimits = "Node.Compute.Capacity.TotalResourceLimits"
const NodeComputeCapacityTotalResourceLimitsCPU = "Node.Compute.Capacity.TotalResourceLimits.CPU"
const NodeComputeCapacityTotalResourceLimitsMemory = "Node.Compute.Capacity.TotalResourceLimits.Memory"
const NodeComputeCapacityTotalResourceLimitsDisk = "Node.Compute.Capacity.TotalResourceLimits.Disk"
const NodeComputeCapacityTotalResourceLimitsGPU = "Node.Compute.Capacity.TotalResourceLimits.GPU"
const NodeComputeCapacityJobResourceLimits = "Node.Compute.Capacity.JobResourceLimits"
const NodeComputeCapacityJobResourceLimitsCPU = "Node.Compute.Capacity.JobResourceLimits.CPU"
const NodeComputeCapacityJobResourceLimitsMemory = "Node.Compute.Capacity.JobResourceLimits.Memory"
const NodeComputeCapacityJobResourceLimitsDisk = "Node.Compute.Capacity.JobResourceLimits.Disk"
const NodeComputeCapacityJobResourceLimitsGPU = "Node.Compute.Capacity.JobResourceLimits.GPU"
const NodeComputeCapacityDefaultJobResourceLimits = "Node.Compute.Capacity.DefaultJobResourceLimits"
const NodeComputeCapacityDefaultJobResourceLimitsCPU = "Node.Compute.Capacity.DefaultJobResourceLimits.CPU"
const NodeComputeCapacityDefaultJobResourceLimitsMemory = "Node.Compute.Capacity.DefaultJobResourceLimits.Memory"
const NodeComputeCapacityDefaultJobResourceLimitsDisk = "Node.Compute.Capacity.DefaultJobResourceLimits.Disk"
const NodeComputeCapacityDefaultJobResourceLimitsGPU = "Node.Compute.Capacity.DefaultJobResourceLimits.GPU"
const NodeComputeCapacityQueueResourceLimits = "Node.Compute.Capacity.QueueResourceLimits"
const NodeComputeCapacityQueueResourceLimitsCPU = "Node.Compute.Capacity.QueueResourceLimits.CPU"
const NodeComputeCapacityQueueResourceLimitsMemory = "Node.Compute.Capacity.QueueResourceLimits.Memory"
const NodeComputeCapacityQueueResourceLimitsDisk = "Node.Compute.Capacity.QueueResourceLimits.Disk"
const NodeComputeCapacityQueueResourceLimitsGPU = "Node.Compute.Capacity.QueueResourceLimits.GPU"
const NodeComputeExecutionStore = "Node.Compute.ExecutionStore"
const NodeComputeExecutionStoreType = "Node.Compute.ExecutionStore.Type"
const NodeComputeExecutionStorePath = "Node.Compute.ExecutionStore.Path"
const NodeComputeJobTimeouts = "Node.Compute.JobTimeouts"
const NodeComputeJobTimeoutsJobExecutionTimeoutClientIDBypassList = "Node.Compute.JobTimeouts.JobExecutionTimeoutClientIDBypassList"
const NodeComputeJobTimeoutsJobNegotiationTimeout = "Node.Compute.JobTimeouts.JobNegotiationTimeout"
const NodeComputeJobTimeoutsMinJobExecutionTimeout = "Node.Compute.JobTimeouts.MinJobExecutionTimeout"
const NodeComputeJobTimeoutsMaxJobExecutionTimeout = "Node.Compute.JobTimeouts.MaxJobExecutionTimeout"
const NodeComputeJobTimeoutsDefaultJobExecutionTimeout = "Node.Compute.JobTimeouts.DefaultJobExecutionTimeout"
const NodeComputeJobSelection = "Node.Compute.JobSelection"
const NodeComputeJobSelectionPolicy = "Node.Compute.JobSelection.Policy"
const NodeComputeJobSelectionPolicyLocality = "Node.Compute.JobSelection.Policy.Locality"
const NodeComputeJobSelectionPolicyRejectStatelessJobs = "Node.Compute.JobSelection.Policy.RejectStatelessJobs"
const NodeComputeJobSelectionPolicyAcceptNetworkedJobs = "Node.Compute.JobSelection.Policy.AcceptNetworkedJobs"
const NodeComputeJobSelectionPolicyProbeHTTP = "Node.Compute.JobSelection.Policy.ProbeHTTP"
const NodeComputeJobSelectionPolicyProbeExec = "Node.Compute.JobSelection.Policy.ProbeExec"
const NodeComputeQueue = "Node.Compute.Queue"
const NodeComputeLogging = "Node.Compute.Logging"
const NodeComputeLoggingLogRunningExecutionsInterval = "Node.Compute.Logging.LogRunningExecutionsInterval"
const NodeComputeManifestCache = "Node.Compute.ManifestCache"
const NodeComputeManifestCacheSize = "Node.Compute.ManifestCache.Size"
const NodeComputeManifestCacheDuration = "Node.Compute.ManifestCache.Duration"
const NodeComputeManifestCacheFrequency = "Node.Compute.ManifestCache.Frequency"
const NodeComputeLogStreamConfig = "Node.Compute.LogStreamConfig"
const NodeComputeLogStreamConfigChannelBufferSize = "Node.Compute.LogStreamConfig.ChannelBufferSize"
const NodeComputeLocalPublisher = "Node.Compute.LocalPublisher"
const NodeComputeLocalPublisherAddress = "Node.Compute.LocalPublisher.Address"
const NodeComputeLocalPublisherPort = "Node.Compute.LocalPublisher.Port"
const NodeComputeLocalPublisherDirectory = "Node.Compute.LocalPublisher.Directory"
const NodeComputeControlPlaneSettings = "Node.Compute.ControlPlaneSettings"
const NodeComputeControlPlaneSettingsInfoUpdateFrequency = "Node.Compute.ControlPlaneSettings.InfoUpdateFrequency"
const NodeComputeControlPlaneSettingsResourceUpdateFrequency = "Node.Compute.ControlPlaneSettings.ResourceUpdateFrequency"
const NodeComputeControlPlaneSettingsHeartbeatFrequency = "Node.Compute.ControlPlaneSettings.HeartbeatFrequency"
const NodeComputeControlPlaneSettingsHeartbeatTopic = "Node.Compute.ControlPlaneSettings.HeartbeatTopic"
const NodeComputeDockerCredentials = "Node.Compute.DockerCredentials"
const NodeComputeDockerCredentialsUsername = "Node.Compute.DockerCredentials.Username"
const NodeComputeDockerCredentialsPassword = "Node.Compute.DockerCredentials.Password"
const NodeComputeExecutor = "Node.Compute.Executor"
const NodeComputeExecutorStorageDirectory = "Node.Compute.Executor.StorageDirectory"
const NodeComputeExecutorResultsPath = "Node.Compute.Executor.ResultsPath"
const NodeComputeBufferedExecutor = "Node.Compute.BufferedExecutor"
const NodeComputeBufferedExecutorDefaultJobExecutionTimeout = "Node.Compute.BufferedExecutor.DefaultJobExecutionTimeout"
const NodeComputeLabels = "Node.Compute.Labels"
const NodeComputeLabelsLabels = "Node.Compute.Labels.Labels"
const NodeComputeStorageProviders = "Node.Compute.StorageProviders"
const NodeComputeStorageProvidersAllowListedLocalPaths = "Node.Compute.StorageProviders.AllowListedLocalPaths"
const NodeComputeStorageProvidersDisabled = "Node.Compute.StorageProviders.Disabled"
const NodeComputeStorageProvidersVolumeSizeRequestTimeout = "Node.Compute.StorageProviders.VolumeSizeRequestTimeout"
const NodeComputeStorageProvidersDownloadURLRequestRetries = "Node.Compute.StorageProviders.DownloadURLRequestRetries"
const NodeComputeStorageProvidersDownloadURLRequestTimeout = "Node.Compute.StorageProviders.DownloadURLRequestTimeout"
const NodeComputeExecutorProviders = "Node.Compute.ExecutorProviders"
const NodeComputeExecutorProvidersDisabled = "Node.Compute.ExecutorProviders.Disabled"
const NodeComputePublisherProviders = "Node.Compute.PublisherProviders"
const NodeComputePublisherProvidersLocal = "Node.Compute.PublisherProviders.Local"
const NodeComputePublisherProvidersLocalAddress = "Node.Compute.PublisherProviders.Local.Address"
const NodeComputePublisherProvidersLocalPort = "Node.Compute.PublisherProviders.Local.Port"
const NodeComputePublisherProvidersLocalDirectory = "Node.Compute.PublisherProviders.Local.Directory"
const NodeComputePublisherProvidersDisabled = "Node.Compute.PublisherProviders.Disabled"
const NodeRequester = "Node.Requester"
const NodeRequesterJobDefaults = "Node.Requester.JobDefaults"
const NodeRequesterJobDefaultsExecutionTimeout = "Node.Requester.JobDefaults.ExecutionTimeout"
const NodeRequesterJobDefaultsDefaultPublisher = "Node.Requester.JobDefaults.DefaultPublisher"
const NodeRequesterExternalVerifierHook = "Node.Requester.ExternalVerifierHook"
const NodeRequesterJobSelectionPolicy = "Node.Requester.JobSelectionPolicy"
const NodeRequesterJobSelectionPolicyLocality = "Node.Requester.JobSelectionPolicy.Locality"
const NodeRequesterJobSelectionPolicyRejectStatelessJobs = "Node.Requester.JobSelectionPolicy.RejectStatelessJobs"
const NodeRequesterJobSelectionPolicyAcceptNetworkedJobs = "Node.Requester.JobSelectionPolicy.AcceptNetworkedJobs"
const NodeRequesterJobSelectionPolicyProbeHTTP = "Node.Requester.JobSelectionPolicy.ProbeHTTP"
const NodeRequesterJobSelectionPolicyProbeExec = "Node.Requester.JobSelectionPolicy.ProbeExec"
const NodeRequesterJobStore = "Node.Requester.JobStore"
const NodeRequesterJobStoreType = "Node.Requester.JobStore.Type"
const NodeRequesterJobStorePath = "Node.Requester.JobStore.Path"
const NodeRequesterHousekeeping = "Node.Requester.Housekeeping"
const NodeRequesterHousekeepingHousekeepingBackgroundTaskInterval = "Node.Requester.Housekeeping.HousekeepingBackgroundTaskInterval"
const NodeRequesterNodeRankRandomnessRange = "Node.Requester.NodeRankRandomnessRange"
const NodeRequesterOverAskForBidsFactor = "Node.Requester.OverAskForBidsFactor"
const NodeRequesterFailureInjectionConfig = "Node.Requester.FailureInjectionConfig"
const NodeRequesterFailureInjectionConfigIsBadActor = "Node.Requester.FailureInjectionConfig.IsBadActor"
const NodeRequesterEvaluationBroker = "Node.Requester.EvaluationBroker"
const NodeRequesterEvaluationBrokerEvalBrokerVisibilityTimeout = "Node.Requester.EvaluationBroker.EvalBrokerVisibilityTimeout"
const NodeRequesterEvaluationBrokerEvalBrokerInitialRetryDelay = "Node.Requester.EvaluationBroker.EvalBrokerInitialRetryDelay"
const NodeRequesterEvaluationBrokerEvalBrokerSubsequentRetryDelay = "Node.Requester.EvaluationBroker.EvalBrokerSubsequentRetryDelay"
const NodeRequesterEvaluationBrokerEvalBrokerMaxRetryCount = "Node.Requester.EvaluationBroker.EvalBrokerMaxRetryCount"
const NodeRequesterWorker = "Node.Requester.Worker"
const NodeRequesterWorkerWorkerCount = "Node.Requester.Worker.WorkerCount"
const NodeRequesterWorkerWorkerEvalDequeueTimeout = "Node.Requester.Worker.WorkerEvalDequeueTimeout"
const NodeRequesterWorkerWorkerEvalDequeueBaseBackoff = "Node.Requester.Worker.WorkerEvalDequeueBaseBackoff"
const NodeRequesterWorkerWorkerEvalDequeueMaxBackoff = "Node.Requester.Worker.WorkerEvalDequeueMaxBackoff"
const NodeRequesterStorageProvider = "Node.Requester.StorageProvider"
const NodeRequesterStorageProviderS3 = "Node.Requester.StorageProvider.S3"
const NodeRequesterStorageProviderS3PreSignedURLDisabled = "Node.Requester.StorageProvider.S3.PreSignedURLDisabled"
const NodeRequesterStorageProviderS3PreSignedURLExpiration = "Node.Requester.StorageProvider.S3.PreSignedURLExpiration"
const NodeRequesterTagCache = "Node.Requester.TagCache"
const NodeRequesterTagCacheSize = "Node.Requester.TagCache.Size"
const NodeRequesterTagCacheDuration = "Node.Requester.TagCache.Duration"
const NodeRequesterTagCacheFrequency = "Node.Requester.TagCache.Frequency"
const NodeRequesterControlPlaneSettings = "Node.Requester.ControlPlaneSettings"
const NodeRequesterControlPlaneSettingsHeartbeatCheckFrequency = "Node.Requester.ControlPlaneSettings.HeartbeatCheckFrequency"
const NodeRequesterControlPlaneSettingsHeartbeatTopic = "Node.Requester.ControlPlaneSettings.HeartbeatTopic"
const NodeRequesterControlPlaneSettingsNodeDisconnectedAfter = "Node.Requester.ControlPlaneSettings.NodeDisconnectedAfter"
const NodeRequesterTranslation = "Node.Requester.Translation"
const NodeRequesterTranslationTranslationEnabled = "Node.Requester.Translation.TranslationEnabled"
const NodeRequesterNodeRanker = "Node.Requester.NodeRanker"
const NodeRequesterNodeRankerMinBacalhauVersion = "Node.Requester.NodeRanker.MinBacalhauVersion"
const NodeRequesterNodeRankerMinBacalhauVersionMajor = "Node.Requester.NodeRanker.MinBacalhauVersion.Major"
const NodeRequesterNodeRankerMinBacalhauVersionMinor = "Node.Requester.NodeRanker.MinBacalhauVersion.Minor"
const NodeRequesterNodeRankerMinBacalhauVersionGitVersion = "Node.Requester.NodeRanker.MinBacalhauVersion.GitVersion"
const NodeRequesterNodeRankerMinBacalhauVersionGitCommit = "Node.Requester.NodeRanker.MinBacalhauVersion.GitCommit"
const NodeRequesterNodeRankerNodeRankRandomnessRange = "Node.Requester.NodeRanker.NodeRankRandomnessRange"
const NodeRequesterNodeMembership = "Node.Requester.NodeMembership"
const NodeRequesterNodeMembershipAutoApproveNodes = "Node.Requester.NodeMembership.AutoApproveNodes"
const NodeBootstrapAddresses = "Node.BootstrapAddresses"
const NodeNodeInfoStoreTTL = "Node.NodeInfoStoreTTL"
const NodeExecutorPluginPath = "Node.ExecutorPluginPath"
const NodeComputeStoragePath = "Node.ComputeStoragePath"
const NodeLoggingMode = "Node.LoggingMode"
const NodeType = "Node.Type"
const NodeAllowListedLocalPaths = "Node.AllowListedLocalPaths"
const NodeDisabledFeatures = "Node.DisabledFeatures"
const NodeDisabledFeaturesEngines = "Node.DisabledFeatures.Engines"
const NodeDisabledFeaturesPublishers = "Node.DisabledFeatures.Publishers"
const NodeDisabledFeaturesStorages = "Node.DisabledFeatures.Storages"
const NodeLabels = "Node.Labels"
const NodeWebUI = "Node.WebUI"
const NodeWebUIEnabled = "Node.WebUI.Enabled"
const NodeWebUIPort = "Node.WebUI.Port"
const NodeNetwork = "Node.Network"
const NodeNetworkType = "Node.Network.Type"
const NodeNetworkPort = "Node.Network.Port"
const NodeNetworkAdvertisedAddress = "Node.Network.AdvertisedAddress"
const NodeNetworkAuthSecret = "Node.Network.AuthSecret"
const NodeNetworkOrchestrators = "Node.Network.Orchestrators"
const NodeNetworkStoreDir = "Node.Network.StoreDir"
const NodeNetworkCluster = "Node.Network.Cluster"
const NodeNetworkClusterName = "Node.Network.Cluster.Name"
const NodeNetworkClusterPort = "Node.Network.Cluster.Port"
const NodeNetworkClusterAdvertisedAddress = "Node.Network.Cluster.AdvertisedAddress"
const NodeNetworkClusterPeers = "Node.Network.Cluster.Peers"
const NodeStrictVersionMatch = "Node.StrictVersionMatch"
const User = "User"
const UserKeyPath = "User.KeyPath"
const UserLibp2pKeyPath = "User.Libp2pKeyPath"
const UserInstallationID = "User.InstallationID"
const Metrics = "Metrics"
const MetricsLibp2pTracerPath = "Metrics.Libp2pTracerPath"
const MetricsEventTracerPath = "Metrics.EventTracerPath"
const Update = "Update"
const UpdateSkipChecks = "Update.SkipChecks"
const UpdateCheckStatePath = "Update.CheckStatePath"
const UpdateCheckFrequency = "Update.CheckFrequency"
const Auth = "Auth"
const AuthTokensPath = "Auth.TokensPath"
const AuthMethods = "Auth.Methods"
const AuthAccessPolicyPath = "Auth.AccessPolicyPath"
